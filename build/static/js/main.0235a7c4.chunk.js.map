{"version":3,"sources":["config.js","helpers/api.js","components/login.js","components/header.js","components/home.js","components/boardDetail.js","components/signup.js","components/account.js","App.js","reportWebVitals.js","index.js"],"names":["config","callAPI","action","data","callback","callbackError","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","Function","statusText","open","send","setCookie","name","val","date","Date","value","setTime","getTime","document","cookie","toUTCString","getCookie","parts","split","length","pop","shift","deleteCookie","quickCheckToken","currentURI","window","location","pathname","substr","includes","Login","useState","username","setUsername","password","setPassword","Container","style","paddingTop","Card","padding","width","margin","className","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","Button","onClick","params","FormData","append","res","success","token","user_id","href","alert","variant","marginLeft","to","Header","Navbar","bg","Brand","Nav","Home","logined","boards","setBoards","boardName","setBoardName","show","setShow","handleClose","useEffect","mounted","console","log","fluid","fontSize","Row","map","board","Col","xs","marginTop","Body","Title","Text","marginRight","id","handleDelete","Link","Modal","onHide","animation","closeButton","Footer","columns","title","cards","BoardDetail","props","detail","setDetail","newBoardName","setNewBoardName","UncontrolledBoard","allowRenameColumn","allowRemoveCard","disableColumnDrag","onCardRemove","initialBoard","allowAddCard","on","onNewCardConfirm","draftCard","onCardNew","match","board_detail","d","objectCard","description","push","Signup","repassword","setrePassword","email","setEmail","firstname","setFirstName","lastname","setLastName","Account","oldPassword","setOldPassword","newPassword","setNewPassword","old_pass_not_valid","App","checkTokenValid","path","component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0235a7c4.chunk.js","sourcesContent":["export const config = {\r\n    \"api_url\": \"http://localhost:8080/funretro/api/\",//must end with slash (/),\r\n    \"cookie_name\": \"funretro-react\",\r\n    \"cookie_user_id\": \"funretro-user-id\",\r\n};\r\n","import {config} from \"../config\";\r\n\r\nexport function callAPI(action, data, callback, callbackError) {\r\n    const xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.onreadystatechange = () => {\r\n        if (xmlHttp.readyState === 4) {\r\n            if (xmlHttp.status === 200) {\r\n                callback(JSON.parse(xmlHttp.responseText));\r\n            } else {\r\n                if (callbackError instanceof Function) {\r\n                    callbackError(xmlHttp.statusText);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    xmlHttp.open('post', config.api_url + action);\r\n    xmlHttp.send(data);\r\n}\r\n\r\nexport function setCookie(name, val) {\r\n    const date = new Date();\r\n    const value = val;\r\n\r\n    // Set it expire in 30 days\r\n    date.setTime(date.getTime() + (30 * 24 * 60 * 60 * 1000));\r\n\r\n    // Set it\r\n    document.cookie = name + '=' + value + '; expires=' + date.toUTCString();\r\n}\r\n\r\nexport function getCookie(name) {\r\n    const value = '; ' + document.cookie;\r\n    const parts = value.split('; ' + name + '=');\r\n\r\n    if (parts.length === 2) {\r\n        return parts.pop().split(';').shift();\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function deleteCookie(name) {\r\n    const date = new Date();\r\n\r\n    // Set it expire in -1 days\r\n    date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\r\n\r\n    // Set it\r\n    document.cookie = name + '=; expires=' + date.toUTCString();\r\n}\r\n\r\nexport function quickCheckToken() {\r\n    const currentURI = window.location.pathname.substr(1);\r\n    if (!['login', 'signup'].includes(currentURI)) {\r\n        if (!getCookie(config.cookie_name)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function checkTokenValid() {\r\n    const currentURI = window.location.pathname.substr(1);\r\n    if (!['login', 'signup'].includes(currentURI)) {\r\n        if (!getCookie(config.cookie_name)) {\r\n            window.location.href = '/login';\r\n        }else{\r\n            const params = new FormData();\r\n            params.append('token', getCookie(config.cookie_name));\r\n            callAPI('checkToken', params, function (res) {\r\n                if (!res.success) {\r\n                    window.location.href = '/login';\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import {Form, Button, Container, Card} from 'react-bootstrap';\r\nimport {useState} from \"react\";\r\nimport {callAPI, setCookie} from \"../helpers/api\";\r\nimport {config} from \"../config\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function actionLogin() {\r\n        const params = new FormData();\r\n        params.append('username', username);\r\n        params.append('password', password);\r\n\r\n        callAPI('login', params, function (res) {\r\n            if (res.success) {\r\n                setCookie(config.cookie_name, res.token);\r\n                setCookie(config.cookie_user_id, res.user_id);\r\n                window.location.href = \"/\";\r\n            } else {\r\n                alert('Login failed');\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container style={{paddingTop: \"2rem\"}}>\r\n            <Card style={{padding: \"1rem\", width: \"300px\", margin: \"auto\"}}>\r\n                <h2 className=\"text-center\">Login</h2>\r\n                <Form>\r\n                    <Form.Group controlId=\"username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Button onClick={actionLogin} variant=\"primary\" type=\"button\">Login</Button>\r\n                    <Link style={{marginLeft: \"20px\"}} to=\"/signup\">Sign up</Link>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import {Navbar, Nav, Button} from \"react-bootstrap\";\r\nimport {deleteCookie} from \"../helpers/api\";\r\nimport {config} from \"../config\";\r\n\r\nfunction Header() {\r\n\r\n    function logoutHandler() {\r\n        deleteCookie(config.cookie_name);\r\n        deleteCookie(config.cookie_user_id);\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    function accountHandler(){\r\n        window.location.href = \"/account\";\r\n    }\r\n\r\n    return (\r\n            <Navbar bg=\"primary\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/\">Funretro</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Button variant=\"light\" onClick={logoutHandler}>Logout</Button>\r\n                    <Button onClick={accountHandler} style={{marginLeft: \"20px\"}} variant=\"outline-light\">Account</Button>\r\n                </Nav>\r\n            </Navbar>\r\n    );\r\n}\r\nexport default Header;\r\n","import {callAPI, checkTokenValid, getCookie, quickCheckToken, setCookie} from \"../helpers/api\";\r\nimport {BrowserRouter, Redirect, Link} from 'react-router-dom';\r\nimport {Container, Row, Col, Card, Navbar, Nav, Modal, Button, Form} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {config} from \"../config\";\r\nimport Header from \"./header\";\r\n\r\n\r\nfunction Home() {\r\n    const logined = quickCheckToken();\r\n    const [boards, setBoards] = useState([]);\r\n    const [boardName, setBoardName] = useState(\"\");\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleSaveBoard = (id) =>{\r\n        const params = new FormData();\r\n        params.append('board_name', boardName);\r\n        params.append('user_id', getCookie(config.cookie_user_id));\r\n        params.append('token', getCookie(config.cookie_name));\r\n\r\n        callAPI('saveBoard', params, function (res) {\r\n            console.log(res);\r\n            if (res.success) {\r\n                setShow(false);\r\n                setBoards(res.data);\r\n            } else {\r\n                alert('Failed');\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleDelete = (id) =>{\r\n        const params = new FormData();\r\n        params.append('id', id);\r\n        params.append('user_id', getCookie(config.cookie_user_id));\r\n        params.append('token', getCookie(config.cookie_name));\r\n\r\n        callAPI('deleteBoard', params, function (res) {\r\n            console.log(res);\r\n            if (res.success) {\r\n                setShow(false);\r\n                setBoards(res.data);\r\n            } else {\r\n                alert('Failed');\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        const params = new FormData();\r\n        params.append('token', getCookie(config.cookie_name));\r\n        params.append('user_id', getCookie(config.cookie_user_id));\r\n\r\n        callAPI('getBoards', params, function (res) {\r\n            if (res.success) {\r\n                console.log(res);\r\n                if (mounted) {\r\n                    setBoards(res.data);\r\n                }\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    },[]);\r\n\r\n    if (logined) {\r\n        return (\r\n            <Container fluid>\r\n               <Header />\r\n\r\n               <div style={{margin:\"20px 30px\"}}>\r\n                   <div>\r\n                       <span style={{fontSize: \"30px\"}}>My Boards</span>\r\n                       <Button style={{fontSize: \"10px\", margin: \"10px 0 20px 30px\"}} variant=\"outline-primary\" onClick={handleShow}>New board</Button>\r\n                   </div>\r\n\r\n                    <Row>\r\n                        {boards.map( board =>\r\n                            <Col xs>\r\n                                <Card style={{ width: '18rem',marginTop:\"1rem\" }}>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{board['board_name']}</Card.Title>\r\n                                        <Card.Text>\r\n                                            Date Created: {board['date_created']}\r\n                                        </Card.Text>\r\n                                        <Link to={'/detail/'+board['id']} style={{marginRight:\"10px\"}}>\r\n                                            <Button variant=\"link\" type=\"button\">\r\n                                                More\r\n                                            </Button>\r\n                                        </Link>\r\n                                        <Button variant=\"link\" type=\"button\" onClick={()=>handleDelete(board['id'])}>Delete</Button>\r\n                                        <Card.Link>\r\n                                            Share Link\r\n                                        </Card.Link>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n               </div>\r\n\r\n                <Modal show={show} onHide={handleClose} animation={false}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"boardname\">\r\n                            <Form.Label>Board name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Username\" onChange={e => setBoardName(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={handleSaveBoard}>\r\n                            Add\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return (<Redirect to=\"/login\"/>);\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import {callAPI, getCookie, quickCheckToken} from \"../helpers/api\";\r\nimport { Redirect} from 'react-router-dom';\r\nimport {Container, Row, Button, Modal, Form} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {config} from \"../config\";\r\nimport Header from \"./header\";\r\nimport Board, { moveCard, addColumn } from \"@lourenci/react-kanban\";\r\nimport \"@lourenci/react-kanban/dist/styles.css\";\r\n\r\nconst board = {\r\n    columns: [\r\n        {\r\n            id: 1,\r\n            title: \"Went Well\",\r\n            cards: [\r\n\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"To Improve\",\r\n            cards: [\r\n\r\n            ]\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Action Items\",\r\n            cards: [\r\n\r\n            ]\r\n        },\r\n    ]\r\n};\r\n\r\nfunction BoardDetail(props) {\r\n    const logined = quickCheckToken();\r\n    const [detail, setDetail] = useState([]);\r\n    const [boardName, setBoardName] = useState('Board Name');\r\n    const [newBoardName, setNewBoardName] = useState('');\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        const params = new FormData();\r\n        params.append('token', getCookie(config.cookie_name));\r\n        params.append('board_id', props.match.params.id);\r\n\r\n        callAPI('getBoardDetail', params, function (res) {\r\n            if (res.success) {\r\n                console.log(res.data);\r\n                let board_detail = board;\r\n                for (let d of res.data['board_details'] ) {\r\n                    if (d.type === 'went well') {\r\n                        let objectCard = {\r\n                            id: d.id,\r\n                            title: d.description,\r\n                            description: d.description,\r\n                        };\r\n                        board_detail.columns[0].cards.push(objectCard);\r\n                    } else if (d.type === 'to improve') {\r\n                        let objectCard = {\r\n                            id: d.id,\r\n                            title: d.description,\r\n                            description: d.description,\r\n                        };\r\n                        board_detail.columns[1].cards.push(objectCard);\r\n                    } else if (d.type === 'action items') {\r\n                        let objectCard = {\r\n                            id: d.id,\r\n                            title: d.description,\r\n                            description: d.description,\r\n                        };\r\n                        board_detail.columns[2].cards.push(objectCard);\r\n                    }\r\n                }\r\n                if (mounted) {\r\n                    setDetail(board_detail);\r\n                    setBoardName(res.data['board_name']);\r\n                    setNewBoardName(res.data['board_name']);\r\n                }\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n\r\n    },[detail]);\r\n\r\n    const handleSaveBoard = () =>{\r\n        const params = new FormData();\r\n        params.append('token', getCookie(config.cookie_name));\r\n        params.append('board_id', props.match.params.id);\r\n        params.append('board_name', newBoardName);\r\n\r\n        callAPI('editBoard', params, function (res) {\r\n            if (res.success) {\r\n                setShow(false);\r\n                setBoardName(newBoardName);\r\n            }\r\n        });\r\n    }\r\n\r\n    function UncontrolledBoard() {\r\n        return (\r\n            <Board\r\n                allowRenameColumn\r\n                allowRemoveCard\r\n                disableColumnDrag\r\n                onCardRemove={console.log}\r\n                initialBoard={board}\r\n                allowAddCard={{ on: \"top\" }}\r\n                onNewCardConfirm={draftCard => ({\r\n                    id: new Date().getTime(),\r\n                    ...draftCard\r\n                })}\r\n                onCardNew={console.log}\r\n            />\r\n        );\r\n    }\r\n    \r\n    if (logined) {\r\n        return (\r\n            <Container fluid>\r\n                <Header />\r\n                <div style={{margin:\"20px 30px\"}}>\r\n                    <div>\r\n                        <span style={{fontSize: \"30px\"}}>{boardName}</span>\r\n                        <Button style={{margin: \"10px 0 20px 30px\"}} variant=\"link\" onClick={() =>handleShow()}>Edit</Button>\r\n                        <Button style={{fontSize: \"10px\", margin: \"10px 0 20px 30px\"}} variant=\"outline-primary\">Share board</Button>\r\n                    </div>\r\n\r\n                    <Row>\r\n                        <UncontrolledBoard />\r\n                    </Row>\r\n                </div>\r\n\r\n                <Modal show={show} onHide={handleClose} animation={false}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Edit board</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"boardname\">\r\n                            <Form.Label>Board name</Form.Label>\r\n                            <Form.Control type=\"text\" value={newBoardName} onChange={e => setNewBoardName(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={handleSaveBoard}>\r\n                            Save\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return (<Redirect to=\"/login\"/>);\r\n    }\r\n}\r\n\r\nexport default BoardDetail;\r\n","import {Form, Button, Container, Card, Col, Row} from 'react-bootstrap';\r\nimport {useState} from \"react\";\r\nimport {callAPI, setCookie} from \"../helpers/api\";\r\nimport {config} from \"../config\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Signup() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [repassword, setrePassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [firstname, setFirstName] = useState(\"\");\r\n    const [lastname, setLastName] = useState(\"\");\r\n\r\n    function signupHandler() {\r\n        /**\r\n         * password\r\n         */\r\n        if(password!== repassword){\r\n            alert(\"re-password not match!\");\r\n            return;\r\n        }\r\n        if(username===\"\" || password===\"\" || email === \"\" || firstname===\"\" || lastname===\"\"){\r\n            alert(\"please input field required!\");\r\n            return;\r\n        }\r\n\r\n        const params = new FormData();\r\n         params.append('username', username);\r\n         params.append('password', password);\r\n         params.append('email', email);\r\n         params.append('firstname', firstname);\r\n         params.append('lastname', lastname);\r\n\r\n        callAPI('signup', params, function (res) {\r\n            console.log(res);\r\n            if (res.success) {\r\n                window.location.href = \"/login\";\r\n            } else {\r\n                alert('Failed');\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container style={{paddingTop: \"2rem\"}}>\r\n            <Card style={{padding: \"1rem\", width: \"600px\", margin: \"auto\"}}>\r\n                <h2 className=\"text-center\">Sign Up</h2>\r\n                <Form>\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"username\">\r\n                                <Form.Label>Username *</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"password\">\r\n                                <Form.Label>Password *</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"repassword\">\r\n                                <Form.Label>Re-Password *</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Re-password\" onChange={e => setrePassword(e.target.value)}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"email\">\r\n                                <Form.Label>Email *</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"firstname\">\r\n                                <Form.Label>First name *</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"First name\" onChange={e => setFirstName(e.target.value)}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Form.Group controlId=\"lastname\">\r\n                                <Form.Label>Last name *</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Last name\" onChange={e => setLastName(e.target.value)}/>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Button onClick={signupHandler} variant=\"primary\" type=\"button\">Submit</Button>\r\n                    <Link style={{marginLeft: \"20px\"}} to=\"/login\">Login</Link>\r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n","import {Form, Button, Container, Card, Col, Row} from 'react-bootstrap';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {callAPI, getCookie, quickCheckToken, setCookie} from \"../helpers/api\";\r\nimport {config} from \"../config\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport Header from \"./header\";\r\n\r\nfunction Account() {\r\n    const logined = quickCheckToken();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [firstname, setFirstName] = useState(\"\");\r\n    const [lastname, setLastName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        const params = new FormData();\r\n        params.append('token', getCookie(config.cookie_name));\r\n        params.append('user_id', getCookie(config.cookie_user_id));\r\n\r\n        callAPI('getUserInfo', params, function (res) {\r\n            if (res.success) {\r\n                console.log(res);\r\n                if (mounted) {\r\n                    setUsername(res.data['username']);\r\n                    setEmail(res.data['email']);\r\n                    setFirstName(res.data['first_name']);\r\n                    setLastName(res.data['last_name']);\r\n                }\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            mounted = false;\r\n        };\r\n    },[]);\r\n\r\n    function updateAccountHandler() {\r\n        if(username===\"\" || email === \"\" || firstname===\"\" || lastname===\"\"){\r\n            alert(\"please input field required!\");\r\n            return;\r\n        }\r\n\r\n        const params = new FormData();\r\n        params.append('token', getCookie(config.cookie_name));\r\n        params.append('username', username);\r\n        params.append('oldPassword', oldPassword);\r\n        params.append('newPassword', newPassword);\r\n        params.append('email', email);\r\n        params.append('firstname', firstname);\r\n        params.append('lastname', lastname);\r\n\r\n        callAPI('updateUserInfo', params, function (res) {\r\n            console.log(res);\r\n            if (res.success && res.data['change_pass']) {\r\n                alert('Updated info and password!');\r\n            }else if(res.success && res.old_pass_not_valid) {\r\n                alert('Updated info! Old password not valid - password not change!');\r\n            }else if(res.success){\r\n                alert('Updated info!');\r\n            } else {\r\n                alert('Failed');\r\n            }\r\n        });\r\n    }\r\n    if (logined) {\r\n        return (\r\n            <Container fluid>\r\n            <Header />\r\n            <Container style={{paddingTop: \"2rem\"}}>\r\n                <Card style={{padding: \"1rem\", width: \"600px\", margin: \"auto\"}}>\r\n                    <h2 className=\"text-center\">Account infomation</h2>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={6}>\r\n                                <Form.Group controlId=\"username\">\r\n                                    <Form.Label>Username *</Form.Label><br/>\r\n                                    <Form.Label>{username}</Form.Label>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>Old Password</Form.Label>\r\n                                    <Form.Control value={oldPassword} type=\"password\" placeholder=\"Password\" onChange={e => setOldPassword(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col xs={6}>\r\n                                <Form.Group controlId=\"email\">\r\n                                    <Form.Label>Email *</Form.Label>\r\n                                    <Form.Control value={email} type=\"text\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Form.Group controlId=\"password\">\r\n                                    <Form.Label>New Password</Form.Label>\r\n                                    <Form.Control value={newPassword} type=\"password\" placeholder=\"Password\" onChange={e => setNewPassword(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col xs={6}>\r\n                                <Form.Group controlId=\"firstname\">\r\n                                    <Form.Label>First name *</Form.Label>\r\n                                    <Form.Control value={firstname} type=\"text\" placeholder=\"First name\" onChange={e => setFirstName(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <Form.Group controlId=\"lastname\">\r\n                                    <Form.Label>Last name *</Form.Label>\r\n                                    <Form.Control value={lastname} type=\"text\" placeholder=\"Last name\" onChange={e => setLastName(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Button onClick={updateAccountHandler} variant=\"primary\" type=\"button\">Change</Button>\r\n                        <Link style={{marginLeft: \"20px\"}} to=\"/\">Back</Link>\r\n                    </Form>\r\n                </Card>\r\n            </Container>\r\n            </Container>\r\n        );\r\n    } else {\r\n        return (<Redirect to=\"/login\"/>);\r\n    }\r\n}\r\n\r\nexport default Account;\r\n","import Login from \"./components/login\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\r\nimport Home from \"./components/home\";\r\nimport {useEffect} from 'react';\r\nimport {checkTokenValid} from \"./helpers/api\";\r\nimport BoardDetail from \"./components/boardDetail\";\r\nimport Signup from \"./components/signup\";\r\nimport Account from \"./components/account\";\r\n\r\nfunction App() {\r\n    useEffect(() => {\r\n        checkTokenValid();\r\n    });\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/login\"><Login/></Route>\r\n                <Route path=\"/detail/:id\" component={BoardDetail} />\r\n                <Route path=\"/signup\" component={Signup} />\r\n                <Route path=\"/account\" component={Account} />\r\n                <Route path=\"/\"><Home/></Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}